name: hd_server
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions:
  id-token: write
  contents: write
env:
  AWS_REGION: ap-northeast-2
  #ECS_TASK_DEFINITION: ./task-definition.json
  ECS_SERVICE: hd_server
  ECS_CLUSTER: hd_server_cluster
  CONTAINER_NAME: hd_server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # properties 파일 생성(application.yaml)
      - name: Make application.yaml
        env:
          PROPERTIES: ${{ secrets.DEPLOY_YAML }}
          DIR_PATH: /src/main/resources
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch application.yml
          echo $PROPERTIES | base64 --decode > application.yml

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      # Build 시작
      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: DockerHub Upload
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPO: ${{ secrets.DOCKERHUB_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:$IMAGE_TAG
          docker push $NAME/$REPO:$IMAGE_TAG